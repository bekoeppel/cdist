#!/bin/sh
#
# 2011 Nico Schottelius (nico-cdist at schottelius.org)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#
#
# __file is a very basic type, which will probably be reused quite often
#

destination="/$__object_id"
state_should="$(cat "$__object/parameter/state")"
exists="$(cat "$__object/explorer/exists")"
if [ -f "$__object/parameter/skip_if_present" ]; then
   skip_if_present="$(cat "$__object/parameter/skip_if_present")"
   if [ "$skip_if_present" == "" ]; then
      skip_if_present="true"
   fi
else
   skip_if_present="false"
fi

case "$state_should" in
   present)
      # No source? Create empty file
      if [ ! -f "$__object/parameter/source" ]; then
         if [ "$exists" = "no" ]; then
            echo touch \"$destination\"
         fi
      fi

      # Mode settings
      if [ -f "$__object/parameter/mode" -a "$skip_if_present" != "true" ]; then
         echo chmod \"$(cat "$__object/parameter/mode")\" \"$destination\"
      fi

      # Group
      if [ -f "$__object/parameter/group" -a "$skip_if_present" != "true" ]; then
         echo chgrp \"$(cat "$__object/parameter/group")\" \"$destination\"
      fi

      # Owner
      if [ -f "$__object/parameter/owner" -a "$skip_if_present" != "true" ]; then
         echo chown \"$(cat "$__object/parameter/owner")\" \"$destination\"
      fi
   ;;

   absent)

      if [ "$exists" = "yes" ]; then
         echo rm -f \"$destination\"
      fi

   ;;

   *)
      echo "Unknown state: $state_should" >&2
      exit 1
   ;;

esac
